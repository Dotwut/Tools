{"version":3,"sources":["webpack:///./components/LanguageSelection.vue","webpack:///./components/LanguageSelection.vue?828d","webpack:///./components/LanguageSelection.vue?181c","webpack:///./node_modules/vuetify/src/components/VAutocomplete/VAutocomplete.sass?90d2","webpack:///./components/S/Autocomplete.vue?3eb3","webpack:///./components/S/Autocomplete.vue","webpack:///./components/S/Autocomplete.vue?f7ff","webpack:///./node_modules/vuetify/src/components/VAutocomplete/VAutocomplete.sass","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts"],"names":["props","value","type","String","default","data","initialLanguage","this","computed","languageInfos","$store","getters","languages","filter","l","enabled","code","component","_vm","_c","_self","_b","staticClass","attrs","name","on","$event","$emit","$attrs","installComponents","SAutocomplete","content","__esModule","module","i","locals","exports","add","outlined","Boolean","scopedSlots","proxy","staticRenderFns","___CSS_LOADER_EXPORT___","___CSS_LOADER_API_IMPORT___","push","defaultMenuProps","VSelectMenuProps","offsetY","offsetOverflow","transition","VSelect","extend","allowOverflow","autoSelectFirst","Function","item","queryText","itemText","toLocaleLowerCase","indexOf","hideNoData","menuProps","options","noFilter","searchInput","lazySearch","classes","call","selectedIndex","computedItems","filteredItems","selectedValues","selectedItems","map","getValue","hasDisplayedItems","hideSelected","some","hasItem","length","currentRange","selectedItem","getText","isSearching","internalSearch","allItems","getPropertyFromItem","text","get","set","val","isAnyValueAllowed","isDirty","searchIsDirty","multiple","menuCanShow","isFocused","$_menuProps","contentClass","trim","find","valueComparator","internalValue","listData","items","virtualizedItems","watch","document","addEventListener","onCopy","$refs","input","select","removeEventListener","blur","updateSelf","isMenuActive","hasSlot","oldVal","activateMenu","created","setSearch","destroyed","methods","onFilteredItemsChanged","preSelectedItem","menu","listIndex","setMenuIndex","findIndex","$nextTick","getTiles","onInternalSearchChanged","updateMenuDimensions","updateDimensions","changeSelectedIndex","keyCode","keyCodes","left","right","backspace","delete","deleteCurrentItem","curIndex","curItem","isInteractive","getDisabled","lastIndex","nextIndex","selectItem","setValue","clearableCallback","genInput","VTextField","mergeData","getObjectValueByPath","autocomplete","domProps","genInputSlot","slot","role","genSelections","onClick","e","onFocus","isAppendInner","target","onInput","badInput","validity","onKeyDown","ctrlKey","home","end","includes","onSpaceDown","onTabDown","onUpDown","preventDefault","setSelectedItems","event","currentItem","currentItemText","clipboardData","_a","setData"],"mappings":"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","file":"a8dd763.js","sourcesContent":["\nexport default {\n  props: {\n    value: {\n      type: String,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      initialLanguage: this.value,\n    };\n  },\n  computed: {\n    languageInfos() {\n      return this.$store.getters['apisettings/settings'].languages.filter(l => l.enabled || l.code === this.initialLanguage);\n    }\n  }\n}\n","import mod from \"-!../node_modules/babel-loader/lib/index.js??ref--2-0!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./LanguageSelection.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js??ref--2-0!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./LanguageSelection.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LanguageSelection.vue?vue&type=template&id=3da109ff&\"\nimport script from \"./LanguageSelection.vue?vue&type=script&lang=js&\"\nexport * from \"./LanguageSelection.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* nuxt-component-imports */\ninstallComponents(component, {SAutocomplete: require('/app/frontend/components/S/Autocomplete.vue').default})\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../sass-loader/dist/cjs.js??ref--6-oneOf-1-3!./VAutocomplete.sass\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"50788f08\", content, true, {\"sourceMap\":false});","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Autocomplete.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Autocomplete.vue?vue&type=script&lang=js&\"","\nexport default {\n  props: {\n    outlined: {\n      type: Boolean,\n      default: true,\n    }\n  }\n}\n","import { render, staticRenderFns } from \"./Autocomplete.vue?vue&type=template&id=0f6b0b58&\"\nimport script from \"./Autocomplete.vue?vue&type=script&lang=js&\"\nexport * from \"./Autocomplete.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".v-autocomplete.v-input>.v-input__control>.v-input__slot{cursor:text}.v-autocomplete input{align-self:center}.v-autocomplete.v-select.v-input--is-focused input{min-width:64px}.v-autocomplete:not(.v-input--is-focused).v-select--chips input{max-height:0;padding:0}.v-autocomplete--is-selecting-index input{opacity:0}.v-autocomplete.v-text-field--enclosed:not(.v-text-field--solo):not(.v-text-field--single-line):not(.v-text-field--outlined) .v-select__slot>input{margin-top:24px}.v-autocomplete.v-text-field--enclosed:not(.v-text-field--solo):not(.v-text-field--single-line):not(.v-text-field--outlined).v-input--dense .v-select__slot>input{margin-top:20px}.v-autocomplete__content.v-menu__content,.v-autocomplete__content.v-menu__content .v-card{border-radius:0}\", \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      if (!this.autoSelectFirst) {\n        const preSelectedItem = oldVal[this.$refs.menu.listIndex]\n\n        if (preSelectedItem) {\n          this.setMenuIndex(val.findIndex(i => i === preSelectedItem))\n        } else {\n          this.setMenuIndex(-1)\n        }\n        this.$emit('update:list-index', this.$refs.menu.listIndex)\n      }\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n\n        if (this.autoSelectFirst && val.length) {\n          this.setMenuIndex(0)\n          this.$emit('update:list-index', this.$refs.menu.listIndex)\n        }\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      if (!this.multiple && value === '') this.deleteCurrentItem()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (\n        !this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (\n        !this.multiple &&\n        !this.valueComparator(\n          this.internalSearch,\n          this.getValue(this.internalValue)\n        )\n      ) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n"],"sourceRoot":""}