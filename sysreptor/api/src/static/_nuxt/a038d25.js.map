{"version":3,"sources":["webpack:///./components/Markdown/ToolbarButton.vue?d91e","webpack:///../packages/markdown/editor/codemirror-utils.js","webpack:///../packages/markdown/editor/commands.js","webpack:///./components/Markdown/Toolbar.vue?e54b","webpack:///../packages/markdown/editor/language.js","webpack:///../packages/markdown/editor/highlight.js","webpack:///./components/Markdown/ToolbarButton.vue?c569","webpack:///./components/Markdown/ToolbarButton.vue?3446","webpack:///./components/Markdown/ToolbarButton.vue?9578","webpack:///./components/Markdown/ToolbarButton.vue","webpack:///./components/Markdown/ToolbarButton.vue?f373","webpack:///./components/Markdown/Toolbar.vue?8948","webpack:///./components/Markdown/Toolbar.vue?eac1","webpack:///./components/Markdown/Toolbar.vue","webpack:///./components/Markdown/Toolbar.vue?0924","webpack:///./components/Markdown/Toolbar.vue?f936"],"names":["content","__esModule","default","module","i","locals","exports","add","linesInRange","doc","range","out","startLine","lineAt","from","number","endLine","to","push","line","getChildren","n","c","firstChild","nextSibling","intersectsRange","node","getIntersectionNodes","tree","predicate","nodes","cb","iterateChildren","topNode","iterateRange","clamp","val","min","max","Math","moveRangeDelete","moveRange","change","moveStart","moveEnd","EditorSelection","moveRangeInsert","insert","length","Context","spaceBefore","spaceAfter","type","item","this","maxWidth","trailing","result","name","String","itemNumber","getContext","selectedNode","cur","parent","context","match","startPos","exec","text","slice","after","len","replace","sliceString","renumberList","changes","offset","prev","m","next","insertNewlineContinueMarkup","state","dispatch","syntaxTree","dont","changeByRange","empty","markdownLanguage","isActiveAt","pos","resolveInner","pop","inner","emptyLine","test","delTo","marker","cursor","prevLine","quoted","index","map","continued","e","blank","charAt","lineBreak","update","scrollIntoView","userEvent","isMark","deleteMarkupBackward","scan","childBefore","lastChild","contextNodeForDelete","spaceEnd","start","isTypeInSelection","selection","ranges","some","toggleMarkdownAction","isInSelection","enable","disable","foundNodes","toggleMarkerType","markerTypes","startMarker","endMarker","insertText","newRange","flatMap","concat","filter","includes","cn","toggleStrong","toggleEmphasis","toggleStrikethrough","toggleListUnordered","listItemNumber","find","removeMarkers","toggleListOrdered","listItemBullet","toggleLink","linksToRemove","insertCodeBlock","codeBlockStart","codeBlockEnd","insertTable","markdownLanguageFacet","defineLanguageFacet","block","open","close","markdownHighlighting","styleTags","t","strong","emphasis","strikethrough","tags","inlinecode","codeblock","table","quote","heading1","heading2","heading3","heading4","heading5","heading6","link","url","footnote","todo","nodeSet","NodeSet","NodeType","none","idx","define","id","extend","languageDataProp","document","indentNodeProp","micromarkToLezerSyntaxTree","events","visitTree","visitNode","children","addListItem","currentListItem","info","enter","end","exit","listItems","modifySyntaxTree","micromarkEventsToTree","Tree","build","buffer","toBuffer","nodeId","types","topID","lezerSyntaxTreeParse","micromarkExtensions","data","Parser","parseMicromarkEvents","extensions","BlockContext","parser","input","fragments","stoppedAt","markdownParser","use","parse","read","MarkdownParser","mdParser","parseMixed","htmlLanguage","language","overlay","html","matchClosingTags","Language","markdown","LanguageSupport","Prec","high","keymap","of","key","run","Tag","markdownHighlightStyle","tagHighlighter","tag","class","tagName","angleBracket","attributeName","attributeValue","comment","markdownHighlightCodeBlocks","ViewPlugin","fromClass","view","Decoration","updateDecorations","builder","RangeSetBuilder","iterate","l","decorations","finish","v","___CSS_LOADER_EXPORT___","___CSS_LOADER_API_IMPORT___","props","icon","required","title","disabled","Boolean","active","component","_self","scopedSlots","_vm","attrs","_c","fn","proxy","installComponents","SBtn","STooltip","editorView","Object","uploadFiles","Function","fileUploadInProgress","lang","computed","editorMode","get","$store","settings","markdownEditorMode","set","commit","spellcheckSupported","getters","features","spellcheck","languages","code","spellcheckEnabled","canUndo","undoDepth","canRedo","redoDepth","methods","fromEntries","entries","undo","redo","err","console","error","onUploadFiles","event","files","target","$refs","fileInput","value","staticClass","_v","staticRenderFns","MarkdownToolbarButton"],"mappings":"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","file":"a038d25.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--7-oneOf-1-3!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ToolbarButton.vue?vue&type=style&index=0&id=5dedde00&prod&lang=scss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"07404f30\", content, true, {\"sourceMap\":false});","import {EditorSelection} from \"@codemirror/state\"\n\n\nexport function linesInRange(doc, range) {\n  const out = [];\n  const startLine = doc.lineAt(range.from).number;\n  const endLine = doc.lineAt(range.to).number;\n  for (let i = startLine; i <= endLine; i++) {\n    out.push(doc.line(i));\n  }\n  return out;\n}\n\nexport function getChildren(n) {\n  const out = [];\n  for (let c = n.firstChild; c; c = c.nextSibling) {\n    out.push(c);\n  }\n  return out;\n}\n\nexport function intersectsRange(range, node) {\n  return range.to >= node.from && node.to >= range.from;\n}\n\nexport function iterateRange(tree, range, cb) {\n  iterateChildren(tree.topNode);\n\n  function iterateChildren(n) {\n    if (!intersectsRange(range, n)) {\n      return;\n    }\n    cb(n);\n    for (const c of getChildren(n)) {\n      iterateChildren(c);\n    }\n  }\n}\n\nexport function getIntersectionNodes(tree, range, predicate) {\n  const nodes = [];\n  iterateRange(tree, range, n => {\n    if (predicate(n)) {\n      nodes.push(n);\n    }\n  });\n  return nodes;\n}\n\nfunction clamp(val, min, max) {\n  return Math.max(min, Math.min(max, val));\n}\n\n\nexport function moveRangeDelete(moveRange, range, change) {\n  const moveStart = clamp(change.from - range.from, change.from - change.to, 0);\n  const moveEnd = clamp(change.from - range.to, change.from - change.to, 0);\n  return EditorSelection.range(\n    moveRange.from + moveStart,\n    moveRange.to + moveEnd\n  );\n}\n\n\nexport function moveRangeInsert(moveRange, range, change) {\n  return EditorSelection.range(\n    moveRange.from + ((range.from > change.from) ? change.insert.length : 0),\n    moveRange.to + ((range.to > change.from) ? change.insert.length : 0),\n  );\n}","import {EditorSelection} from \"@codemirror/state\"\nimport {syntaxTree} from \"@codemirror/language\"\nimport { markdownLanguage } from \"./language\";\nimport {linesInRange, getChildren, intersectsRange, getIntersectionNodes, moveRangeDelete, moveRangeInsert} from './codemirror-utils';\n\n\nclass Context {\n  constructor(\n    node,\n    from,\n    to,\n    spaceBefore,\n    spaceAfter,\n    type,\n    item\n  ) {\n    this.node = node;\n    this.from = from;\n    this.to = to;\n    this.spaceBefore = spaceBefore;\n    this.spaceAfter = spaceAfter;\n    this.type = type;\n    this.item = item;\n  }\n\n  blank(maxWidth = null, trailing = true) {\n    let result = this.spaceBefore;\n    if (this.node.name === \"blockQuote\") { \n      result += \">\";\n    }\n    if (maxWidth !== null) {\n      while (result.length < maxWidth) {\n        result += \" \";\n      }\n      return result;\n    } else {\n      for (let i = this.to - this.from - result.length - this.spaceAfter.length; i > 0; i--) {\n        result += \" \";\n      }\n      return result + (trailing ? this.spaceAfter : \"\");\n    }\n  }\n\n  marker(doc, add) {\n    let number = this.node.name == \"listOrdered\" ? String((+itemNumber(this.item, doc)[2] + add)) : \"\"\n    return this.spaceBefore + number + this.type + this.spaceAfter\n  }\n}\n\nfunction getContext(selectedNode, doc) {\n  let nodes = []\n  for (let cur = selectedNode; cur && cur.name != \"document\"; cur = cur.parent) {\n    if (cur.name == \"listItem\" || cur.name == \"blockQuote\")\n      nodes.push(cur)\n  }\n  let context = [];\n  for (let i = nodes.length - 1; i >= 0; i--) {\n    let node = nodes[i], match;\n    let line = doc.lineAt(node.from), startPos = node.from - line.from;\n    if (node.name == \"blockQuote\" && (match = /^[ \\t]*>( ?)/.exec(line.text.slice(startPos)))) {\n      context.push(new Context(node, startPos, startPos + match[0].length, \"\", match[1], \">\", null));\n    } else if (node.name == \"listItem\" && node.parent.name == \"listOrdered\" &&\n               (match = /^([ \\t]*)\\d+([.)])([ \\t]*)/.exec(line.text.slice(startPos)))) {\n      let after = match[3], len = match[0].length\n      if (after.length >= 4) { after = after.slice(0, after.length - 4); len -= 4 }\n      context.push(new Context(node.parent, startPos, startPos + len, match[1], after, match[2], node));\n    } else if (node.name == \"listItem\" && node.parent.name == \"listUnordered\" &&\n               (match = /^([ \\t]*)([-+*])([ \\t]{1,4}\\[[ xX]\\])?([ \\t]+)/.exec(line.text.slice(startPos)))) {\n      let after = match[4], len = match[0].length\n      if (after.length > 4) { after = after.slice(0, after.length - 4); len -= 4 }\n      let type = match[2]\n      if (match[3]) type += match[3].replace(/[xX]/, ' ')\n      context.push(new Context(node.parent, startPos, startPos + len, match[1], after, type, node));\n    }\n  }\n  return context\n}\n\nfunction itemNumber(item, doc) {\n  return /^(\\s*)(\\d+)(?=[.)])/.exec(doc.sliceString(item.from, item.from + 10))\n}\n\nfunction renumberList(after, doc, changes, offset = 0) {\n  for (let prev = -1, node = after;;) {\n    if (node.name == \"listItem\") {\n      let m = itemNumber(node, doc)\n      let number = +m[2]\n      if (prev >= 0) {\n        if (number != prev + 1) return\n        changes.push({from: node.from + m[1].length, to: node.from + m[0].length, insert: String(prev + 2 + offset)})\n      }\n      prev = number\n    }\n    let next = node.nextSibling\n    if (!next) break\n    node = next\n  }\n}\n\n/// This command, when invoked in Markdown context with cursor\n/// selection(s), will create a new line with the markup for\n/// blockquotes and lists that were active on the old line. If the\n/// cursor was directly after the end of the markup for the old line,\n/// trailing whitespace and list markers are removed from that line.\n///\n/// The command does nothing in non-Markdown context, so it should\n/// not be used as the only binding for Enter (even in a Markdown\n/// document, HTML and code regions might use a different language).\nexport const insertNewlineContinueMarkup = ({state, dispatch}) => {\n  let tree = syntaxTree(state), {doc} = state\n  let dont = null, changes = state.changeByRange(range => {\n    if (!range.empty || !markdownLanguage.isActiveAt(state, range.from)) return dont = {range}\n    let pos = range.from, line = doc.lineAt(pos)\n    let context = getContext(tree.resolveInner(pos, -1), doc)\n    while (context.length && context[context.length - 1].from > pos - line.from) context.pop()\n    if (!context.length) return dont = {range}\n    let inner = context[context.length - 1]\n    if (inner.to - inner.spaceAfter.length > pos - line.from) return dont = {range}\n\n    let emptyLine = pos >= (inner.to - inner.spaceAfter.length) && !/\\S/.test(line.text.slice(inner.to))\n    // Empty line in list\n    if (inner.item && emptyLine) {\n      let next = context.length > 1 ? context[context.length - 2] : null\n      let delTo, insert = \"\"\n      if (next && next.item) { // Re-add marker for the list at the next level\n        delTo = line.from + next.from\n        insert = next.marker(doc, 1)\n      } else {\n        delTo = line.from + (next ? next.to : 0)\n      }\n      let changes = [{from: delTo, to: pos, insert}]\n      if (inner.node.name == \"listOrdered\") {\n        renumberList(inner.item, doc, changes, -2);\n      }\n      if (next && next.node.name == \"listOrdered\") {\n        renumberList(next.item, doc, changes);\n      }\n      return {range: EditorSelection.cursor(delTo + insert.length), changes}\n    }\n\n    if (inner.node.name == \"blockQuote\" && emptyLine && line.from) {\n      let prevLine = doc.lineAt(line.from - 1), quoted = />\\s*$/.exec(prevLine.text)\n      // Two aligned empty quoted lines in a row\n      if (quoted && quoted.index == inner.from) {\n        let changes = state.changes([{from: prevLine.from + quoted.index, to: prevLine.to},\n                                     {from: line.from + inner.from, to: line.to}])\n        return {range: range.map(changes), changes}\n      }\n    }\n\n    let changes = []\n    if (inner.node.name == \"listOrdered\") {\n      renumberList(inner.item, doc, changes);\n    }\n    let continued = inner.item && inner.item.from < line.from;\n    let insert = \"\";\n    // If not dedented\n    if (!continued || /^[\\s\\d.)\\-+*>]*/.exec(line.text)[0].length >= inner.to) {\n      for (let i = 0, e = context.length - 1; i <= e; i++) {\n        insert += i == e && !continued ? context[i].marker(doc, 1)\n          : context[i].blank(i < e ? context[i + 1].from - insert.length : null);\n      }\n    }\n    let from = pos;\n    while (from > line.from && /\\s/.test(line.text.charAt(from - line.from - 1))) { \n      from--; \n    }\n    insert = state.lineBreak + insert;\n    changes.push({from, to: pos, insert});\n    return {range: EditorSelection.cursor(from + insert.length), changes};\n  })\n  if (dont) return false\n  dispatch(state.update(changes, {scrollIntoView: true, userEvent: \"input\"}))\n  return true\n}\n\n\n\nfunction isMark(node) {\n  return node.name == \"blockQuotePrefix\" || node.name == \"listItemPrefix\"\n}\n\nfunction contextNodeForDelete(tree, pos) {\n  let node = tree.resolveInner(pos, -1), scan = pos\n  if (isMark(node)) {\n    scan = node.from\n    node = node.parent\n  }\n  for (let prev; prev = node.childBefore(scan);) {\n    if (isMark(prev)) {\n      scan = prev.from\n    } else if (prev.name == \"listOrdered\" || prev.name == \"listUnordered\") {\n      node = prev.lastChild\n      scan = node.to\n    } else {\n      break\n    }\n  }\n  return node;\n}\n\n\n/// This command will, when invoked in a Markdown context with the\n/// cursor directly after list or blockquote markup, delete one level\n/// of markup. When the markup is for a list, it will be replaced by\n/// spaces on the first invocation (a further invocation will delete\n/// the spaces), to make it easy to continue a list.\n///\n/// When not after Markdown block markup, this command will return\n/// false, so it is intended to be bound alongside other deletion\n/// commands, with a higher precedence than the more generic commands.\nexport const deleteMarkupBackward = ({state, dispatch}) => {\n  let tree = syntaxTree(state)\n  let dont = null, changes = state.changeByRange(range => {\n    let pos = range.from, {doc} = state\n    if (range.empty && markdownLanguage.isActiveAt(state, range.from)) {\n      let line = doc.lineAt(pos)\n      let context = getContext(contextNodeForDelete(tree, pos), doc)\n      if (context.length) {\n        let inner = context[context.length - 1]\n        let spaceEnd = inner.to - inner.spaceAfter.length + (inner.spaceAfter ? 1 : 0)\n        // Delete extra trailing space after markup\n        if (pos - line.from > spaceEnd && !/\\S/.test(line.text.slice(spaceEnd, pos - line.from)))\n          return {range: EditorSelection.cursor(line.from + spaceEnd),\n                  changes: {from: line.from + spaceEnd, to: pos}}\n        if (pos - line.from == spaceEnd &&\n            // Only apply this if we're on the line that has the\n            // construct's syntax, or there's only indentation in the\n            // target range\n            (!inner.item || line.from <= inner.item.from || !/\\S/.test(line.text.slice(0, inner.to)))) {\n          let start = line.from + inner.from\n          // Replace a list item marker with blank space\n          if (inner.item && inner.node.from < inner.item.from && /\\S/.test(line.text.slice(inner.from, inner.to))) {\n            return {range, changes: {from: start, to: line.from + inner.to, insert: inner.blank(inner.to - inner.from)}};\n          }\n          // Delete one level of indentation\n          if (start < pos) {\n            return {range: EditorSelection.cursor(start), changes: {from: start, to: pos}};\n          }\n        }\n      }\n    }\n    return dont = {range}\n  })\n  if (dont) return false\n  dispatch(state.update(changes, {scrollIntoView: true, userEvent: \"delete\"}))\n  return true\n}\n\n\nexport function isTypeInSelection(state, type) {\n  let tree = syntaxTree(state);\n  return state.selection.ranges.some(range => getIntersectionNodes(tree, range, n => n.name === type).length > 0);\n}\n\n\nfunction toggleMarkdownAction({state, dispatch}, { isInSelection, enable, disable }) {\n  const tree = syntaxTree(state);\n\n  const changes = state.changeByRange(range => {\n    if (!markdownLanguage.isActiveAt(state, range.from)) {\n      return {range};\n    }\n\n    const foundNodes = getIntersectionNodes(tree, range, isInSelection);\n    if (foundNodes.length > 0) {\n      if (disable) {\n        return disable(range, foundNodes);\n      } else {\n        return {range};\n      }\n    } else {\n      if (enable) {\n        return enable(range, tree);\n      } else {\n        return {range};\n      }\n    }\n  });\n\n  dispatch(state.update(changes, {scrollIntoView: true, userEvent: 'input'}));\n  return true;\n}\n\n\nfunction toggleMarkerType({state, dispatch}, { type, markerTypes = [], startMarker = null, endMarker = null}) {\n  return toggleMarkdownAction({state, dispatch}, {\n    isInSelection: n => {\n      return n.name === type || (n.name === 'data' && state.doc.sliceString(n.from, n.to) === startMarker + endMarker)\n    },\n    enable: (range) => {\n      if (range.empty) {\n        const insertText = 'text';\n        return {\n          range: EditorSelection.range(range.from + startMarker.length, range.to + startMarker.length + insertText.length),\n          changes: [{from: range.from, insert: startMarker + insertText + endMarker}],\n        };\n      } else {\n        // insert bold markers at start and end of selection\n        return {\n          range: EditorSelection.range(range.from + startMarker.length, range.to + startMarker.length),\n          changes: [\n            {from: range.from, insert: startMarker},\n            {from: range.to, insert: endMarker},\n        ]};\n      }\n    },\n    disable: (range, foundNodes) => {\n      // remove bold markers of all intersecting bold nodes\n      const removeMarkers = foundNodes\n        .flatMap(n => getChildren(n).concat(n))\n        .filter(c => markerTypes.includes(c.name) || (c.name === 'data' && state.doc.sliceString(c.from, c.to) === startMarker + endMarker));\n      let newRange = range;\n      const changes = [];\n      for (const cn of removeMarkers) {\n        const change = {from: cn.from, to: cn.to};\n        newRange = moveRangeDelete(newRange, range, change)\n        changes.push(change);\n      }\n      return { range: newRange, changes };\n    }\n  });\n}\n\nexport function toggleStrong({state, dispatch}) {\n  return toggleMarkerType({state, dispatch}, {\n    type: 'strong',\n    markerTypes: ['strongSequence'],\n    startMarker: '**',\n    endMarker: '**'\n  });\n}\n\nexport function toggleEmphasis({state, dispatch}) {\n  return toggleMarkerType({state, dispatch}, {\n    type: 'emphasis',\n    markerTypes: ['emphasisSequence'],\n    startMarker: '_',\n    endMarker: '_',\n  });\n}\n\nexport function toggleStrikethrough({state, dispatch}) {\n  return toggleMarkerType({state, dispatch}, {\n    type: 'strikethrough',\n    markerTypes: ['strikethroughSequence'],\n    startMarker: '~~',\n    endMarker: '~~'\n  });\n}\n\nexport function toggleListUnordered({state, dispatch}) {\n  return toggleMarkdownAction({state, dispatch}, {\n    isInSelection: n => n.name === 'listUnordered',\n    enable: (range, tree) => {\n      // Add marker to start of each line\n      // If line is a listItem of an listOrdered: replace the marker\n      const changes = [];\n      let newRange = range;\n      for (const line of linesInRange(state.doc, range)) {\n        const listItemNumber = getIntersectionNodes(tree, line, n => n.name === 'listItem' && n.parent.name === 'listOrdered')\n          .flatMap(n => getChildren(n))\n          .filter(n => n.name === 'listItemPrefix')\n          .find(n => intersectsRange(line, n));\n        \n        if (listItemNumber) {\n          const change = {from: listItemNumber.from, to: listItemNumber.to, insert: '* '};\n          newRange = moveRangeInsert(moveRangeDelete(newRange, range, change), range, change);\n          changes.push(change);\n        } else {\n          const change = {from: line.from, insert: '* '};\n          newRange = moveRangeInsert(newRange, range, change);\n          changes.push(change);\n        }\n      }\n      return {\n        range: newRange,\n        changes,\n      };\n    },\n    disable: (range, foundNodes) => {\n      const removeMarkers = foundNodes\n        .flatMap(n => getChildren(n))  // Get all listItems\n        .filter(i => intersectsRange(range, i))  // Get selected listItems\n        .flatMap(n => getChildren(n))\n        .filter(n => n.name === 'listItemPrefix');\n      let newRange = range;\n      const changes = [];\n      for (const cn of removeMarkers) {\n        const change = {from: cn.from, to: cn.to};\n        newRange = moveRangeDelete(newRange, range, change)\n        changes.push(change);\n      }\n      return { range: newRange, changes };\n    }\n  });\n}\n\nexport function toggleListOrdered({state, dispatch}) {\n  return toggleMarkdownAction({state, dispatch}, {\n    isInSelection: n => n.name === 'listOrdered',\n    enable: (range, tree) => {\n      // Add marker to start of each line\n      // If line is a listItem of an listUnordered: replace the marker\n      const changes = [];\n      let newRange = range;\n      let itemNumber = 0;\n      for (const line of linesInRange(state.doc, range)) {\n        itemNumber += 1;\n        const listItemNumber =  itemNumber + '. ';\n\n        const listItemBullet = getIntersectionNodes(tree, line, n => n.name === 'listItem' && n.parent.name === 'listUnordered')\n          .flatMap(n => getChildren(n))\n          .filter(n => n.name === 'listItemPrefix')\n          .find(n => intersectsRange(line, n));\n        \n        if (listItemBullet) {\n          const change = {from: listItemBullet.from, to: listItemBullet.to, insert: listItemNumber};\n          newRange = moveRangeInsert(moveRangeDelete(newRange, range, change), range, change);\n          changes.push(change);\n        } else {\n          const change = {from: line.from, insert: listItemNumber};\n          newRange = moveRangeInsert(newRange, range, change);\n          changes.push(change);\n        }\n      }\n      return {\n        range: newRange,\n        changes,\n      };\n    },\n    disable: (range, foundNodes) => {\n      const removeMarkers = foundNodes\n        .flatMap(n => getChildren(n))  // Get all listItems\n        .filter(i => intersectsRange(range, i))  // Get selected listItems\n        .flatMap(n => getChildren(n))\n        .filter(n => n.name === 'listItemPrefix');\n      let newRange = range;\n      const changes = [];\n      for (const cn of removeMarkers) {\n        const change = {from: cn.from, to: cn.to};\n        newRange = moveRangeDelete(newRange, range, change)\n        changes.push(change);\n      }\n      return { range: newRange, changes };\n    }\n  });\n}\n\n\nexport function toggleLink({state, dispatch}) {\n  return toggleMarkdownAction({state, dispatch}, {\n    isInSelection: n => n.name === 'link',\n    enable: (range) => {\n      return {\n        range: EditorSelection.range(range.from + 1, range.to + 1),\n        changes: [\n          {from: range.from, insert: '['},\n          {from: range.to, insert: '](' + (range.from === range.to ? 'https://' : state.doc.sliceString(range.from, range.to)) + ')'},\n        ]\n      };\n    },\n    disable: (range, foundNodes) => {\n      // Remove links only when a range is inside the link label\n      const linksToRemove = foundNodes\n        .filter(n => \n          getChildren(n)\n          .flatMap(c => getChildren(c))\n          .filter(c => c.name === 'labelText' && c.parent.name === 'label' && range.from >= c.from && range.to <= c.to)\n          .length === 1)\n        .flatMap(n => getChildren(n).flatMap(c => getChildren(c)))\n        .filter(c => !(c.name === 'labelText' && c.parent.name === 'label'));\n      const changes = [];\n      let newRange = range;\n      for (const n of linksToRemove) {\n        const change = {from: n.from, to: n.to};\n        newRange = moveRangeDelete(newRange, range, change);\n        changes.push(change);\n      }\n      return {\n        range: newRange,\n        changes,\n      };\n    }\n  });\n}\n\nexport function insertCodeBlock({state, dispatch}) {\n  return toggleMarkdownAction({state, dispatch}, {\n    isInSelection: n => n.name === 'codeFenced',\n    enable: (range) => {\n      // insert \"```\\n\" at the start of the first selected line and \"\\n```\" at the end of the last selected line\n      const codeBlockStart = state.lineBreak + '```' + state.lineBreak;\n      const codeBlockEnd = state.lineBreak + '```';\n      return {\n        range: EditorSelection.range(range.from + codeBlockStart.length, range.to + codeBlockStart.length),\n        changes: [\n          {from: state.doc.lineAt(range.from).from, insert: codeBlockStart},\n          {from: state.doc.lineAt(range.to).to, insert: codeBlockEnd},\n        ],\n      };\n    },\n  })\n}\n\nexport function insertTable({state, dispatch}) {\n  return toggleMarkdownAction({state, dispatch}, {\n    isInSelection: n => n.name === 'table',\n    enable: (range) => {\n      return {\n        range,\n        changes: [{\n          from: state.doc.lineAt(range.to).to, \n          insert: state.lineBreak +\n                  '| Column1 | Column2 | Column3 |' + state.lineBreak +\n                  '| ------- | ------- | ------- |' + state.lineBreak +\n                  '| Text    | Text    | Text    |' + state.lineBreak + \n                  state.lineBreak,\n        }],\n      };\n    }\n  });\n}\n\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--7-oneOf-1-3!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=style&index=0&id=0eb62b93&prod&lang=scss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"76a20e68\", content, true, {\"sourceMap\":false});","import { micromarkEventsToTree, parseMicromarkEvents } from \"./micromark-utils\";\nimport { LanguageSupport, Language, defineLanguageFacet, languageDataProp, indentNodeProp } from '@codemirror/language';\nimport {html} from \"@codemirror/lang-html\"\nimport {Prec} from \"@codemirror/state\";\nimport { keymap } from '@codemirror/view';\nimport { Parser, Tree, NodeSet, NodeType, parseMixed } from '@lezer/common';\nimport {styleTags, tags as t} from \"@lezer/highlight\"\nimport { markdownParser } from \"..\";\nimport { tags } from \"./highlight\";\nimport { insertNewlineContinueMarkup, deleteMarkupBackward, toggleStrong, toggleEmphasis } from \"./commands\";\n\nconst markdownLanguageFacet = defineLanguageFacet({block: {open: '<!--', close: '-->'}});\n\nconst markdownHighlighting = styleTags({\n  \"strong/...\": t.strong,\n  \"emphasis/...\": t.emphasis,\n  \"strikethrough/...\": t.strikethrough,\n  \"codeText/...\": tags.inlinecode,\n  \"codeFenced/...\": tags.codeblock,\n  \"table/...\": tags.table,\n  \"blockQuote/...\": t.quote,\n  \"heading1/...\": t.heading1,\n  \"heading2/...\": t.heading2,\n  \"heading3/...\": t.heading3,\n  \"heading4/...\": t.heading4,\n  \"heading5/...\": t.heading5,\n  \"heading6/...\": t.heading6,\n  \"link/...\": t.link,\n  \"image/...\": t.link,\n  \"textAttributes/...\": t.link,\n  \"resource/...\": t.url,\n  \"inlineFootnote/...\": tags.footnote, \n  \"templateVariable\": tags.inlinecode,\n  \"todo/...\": tags.todo,\n});\nconst nodeTypes = [\n  'strong', 'strongSequence', 'emphasis', 'emphasisSequence', 'strikethrough', 'strikethroughSequence', \n  'codeText', 'codeFenced', 'table', 'blockQuote',\n  'heading1', 'heading2', 'heading3', 'heading4', 'heading5', 'heading6',\n  'link', 'image', 'resource', 'label', 'labelMarker', 'labelText',\n  'inlineFootnote', 'textAttributes', 'templateVariable', 'todo',\n  'htmlText', 'htmlFlow',\n  'data', 'paragraph', 'content', 'document', 'lineEnding',\n  'listOrdered', 'listUnordered', 'listItem', 'listItemPrefix', 'blockQuotePrefix', 'listItemMarker', \n];\nconst nodeSet = new NodeSet([NodeType.none].concat(nodeTypes.map((type, idx) => NodeType.define({id: idx + 1, name: type}))))\n  .extend(markdownHighlighting)\n  .extend(languageDataProp.add({ document: markdownLanguageFacet }))\n  .extend(indentNodeProp.add({ document: () => null }));\n\n\nfunction modifySyntaxTree(tree) {\n  visitTree(tree);\n  return tree;\n\n  function visitTree(t) {\n    for (const n of t) {\n      visitNode(n);\n      if ((n.children?.length || 0) > 0) {\n        visitTree(n.children);\n      }\n    }\n  }\n  function visitNode(n) {\n    // Add ListItem nodes\n    if (['listOrdered', 'listUnordered'].includes(n.type)) {\n      let listItems = [];\n      let currentListItem = [];\n      for (const c of n.children) {\n        if (c.type === 'listItemPrefix') {\n          addListItem();\n        }\n        currentListItem.push(c);\n      }\n      addListItem();\n\n      function addListItem() {\n        if (currentListItem.length > 0) {      \n          const info = {\n            type: 'listItem',\n            start: currentListItem[0].enter.start,\n            end: currentListItem.slice(-1)[0].exit.end,\n          };\n\n          listItems.push({\n            type: 'listItem', \n            enter: info,\n            exit: info,\n            children: currentListItem,\n          });\n          currentListItem = [];\n        }\n      }\n\n      if (listItems.length > 0) {\n        n.children = listItems;\n      }\n    }\n  }\n}\n\nfunction micromarkToLezerSyntaxTree(text, events) {\n  const tree = modifySyntaxTree(micromarkEventsToTree(text, events));\n  // console.log('markdown syntax tree', tree);\n  \n  function toBuffer(node) {\n    const buffer = [];\n    for (const c of node.children || []) {\n      buffer.push(...toBuffer(c));\n    }\n    let nodeId = nodeSet.types.find(t => t.name === node.enter.type);\n    if (node.type === 'atxHeading' && node.children.length >= 1 && node.children[0].type === 'atxHeadingSequence') {\n      nodeId = nodeSet.types.find(t => t.name === 'heading' + node.children[0].text.length || 0);\n    }\n    \n    buffer.push((nodeId || NodeType.none).id, node.enter.start.offset, node.enter.end.offset, 4 + buffer.length);\n    return buffer;\n  }\n\n  return Tree.build({\n    buffer: tree.length > 0 ? toBuffer({children: tree, enter: {type: 'document', start: tree[0].enter.start, end: tree.slice(-1)[0].enter.end}}) : [],\n    nodeSet: nodeSet,\n    topID: nodeSet.types.find(t => t.name === 'document').id,\n  });\n}\n\n\nexport function lezerSyntaxTreeParse() {\n  const micromarkExtensions = this.data('micromarkExtensions') || [];\n  this.Parser = parser;\n\n  function parser(text) {\n    const events = parseMicromarkEvents(text, {extensions: micromarkExtensions});\n    return micromarkToLezerSyntaxTree(text, events);\n  }\n}\n\n\nclass BlockContext {\n  constructor(parser, input, fragments, ranges) {\n    this.parser = parser;\n    this.input = input;\n    this.fragments = fragments;\n    this.ranges = ranges;\n    this.stoppedAt = null;\n  }\n  \n  advance() {\n    // TODO: support incremental parsing: only parse current (and sourrounding?) blocks to increase performance\n    // test performance:\n    // * ~1ms: very short text\n    // * 10-20ms: longer md document with many costructs\n    // * 10-20ms: long text, no markup\n    // * ~30-100ms: https://raw.githubusercontent.com/toptensoftware/markdowndeep/master/Backup/MarkdownDeepBenchmark/benchmark/markdown-example-long-2.text\n    return markdownParser()\n    .use(lezerSyntaxTreeParse)\n    .parse(this.input.read(0, this.input.length));\n  }\n\n  get parsedPos() {\n    return this.input.length;\n  }\n\n  stopAt(pos) {\n    this.stoppedAt = pos;\n  }\n\n}\n\n\nclass MarkdownParser extends Parser {\n  createParse(input, fragments, ranges) {\n    const mdParser = new BlockContext(this, input, fragments, ranges);\n    return parseMixed((node, input) => {\n      if (['htmlText', 'htmlFlow'].includes(node.name)) {\n        return {parser: htmlLanguage.language.parser, overlay: [{from: node.from, to: node.to}]}\n      }\n      return null;\n    })(mdParser, input, fragments, ranges);\n  }\n}\n\nconst htmlLanguage = html({matchClosingTags: false});\n\nexport const markdownLanguage = new Language(\n  markdownLanguageFacet, \n  new MarkdownParser()\n);\n\nexport function markdown() {\n  return new LanguageSupport(markdownLanguage, [\n    Prec.high(keymap.of([\n      {key: 'Enter', run: insertNewlineContinueMarkup},\n      {key: 'Backspace', run: deleteMarkupBackward},\n    ])),\n    keymap.of([\n      {key: 'Mod-b', run: toggleStrong},\n      {key: 'Mod-i', run: toggleEmphasis},\n    ])\n  ]);\n}\n","import { syntaxTree } from \"@codemirror/language\";\nimport { RangeSetBuilder } from \"@codemirror/state\";\nimport { Decoration, ViewPlugin } from \"@codemirror/view\";\nimport { tags as t, Tag, tagHighlighter } from \"@lezer/highlight\";\nimport { linesInRange } from \"./codemirror-utils\";\n\nexport const tags = {\n  codeblock: Tag.define(),\n  inlinecode: Tag.define(),\n  footnote: Tag.define(),\n  table: Tag.define(),\n  todo: Tag.define(),\n};\n\n      \nexport const markdownHighlightStyle = tagHighlighter([\n  {tag: t.heading1, class: 'tok-h1'},\n  {tag: t.heading2, class: 'tok-h2'},\n  {tag: t.heading3, class: 'tok-h3'},\n  {tag: t.heading4, class: 'tok-h4'},\n  {tag: t.heading5, class: 'tok-h5'},\n  {tag: t.heading6, class: 'tok-h6'},\n  {tag: t.strong, class: 'tok-strong'},\n  {tag: t.emphasis, class: 'tok-emphasis'},\n  {tag: t.strikethrough, class: 'tok-strikethrough'},\n  {tag: t.link, class: 'tok-link'},\n  {tag: t.url, class: 'tok-url'},\n  {tag: t.quote, class: 'tok-quote'},\n\n  {tag: tags.inlinecode, class: 'tok-inlinecode'},\n  {tag: tags.table, class: 'tok-table'},\n  {tag: tags.footnote, class: 'tok-footnote'},\n  {tag: tags.todo, class: 'tok-todo'},\n\n  {tag: t.tagName, class: 'tok-tagname'},\n  {tag: t.angleBracket, class: 'tok-anglebracket'},\n  {tag: t.attributeName, class: 'tok-attributename'},\n  {tag: t.attributeValue, class: 'tok-attributevalue'},\n  {tag: t.comment, class: 'tok-comment'},\n]);\n\n\n// https://discuss.codemirror.net/t/how-to-define-highlighting-styles-for-blocks/4029\nexport const markdownHighlightCodeBlocks = ViewPlugin.fromClass(class {\n  decorations = Decoration.none;\n\n  constructor(view) {\n    this.updateDecorations(view);\n  }\n\n  update(update) {\n    this.updateDecorations(update.view);\n  }\n\n  updateDecorations(view) {\n    let builder = new RangeSetBuilder();\n    syntaxTree(view.state).iterate({\n      enter: (n) => {\n        if (n.name === 'codeFenced') {\n          for (const l of linesInRange(view.state.doc, n)) {\n            builder.add(l.from, l.from, Decoration.line({class: 'tok-codeblock'}));\n          }    \n        }\n      }\n    })\n    this.decorations = builder.finish();\n  }\n}, {decorations: v => v.decorations});","export * from \"-!../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--7-oneOf-1-3!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ToolbarButton.vue?vue&type=style&index=0&id=5dedde00&prod&lang=scss&scoped=true&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".v-btn--outlined[data-v-5dedde00]{border-radius:15%}\", \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ToolbarButton.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ToolbarButton.vue?vue&type=script&lang=js&\"","\nexport default {\n  props: {\n    icon: {\n      type: String,\n      required: true,\n    },\n    title: {\n      type: String,\n      default: '',\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    active: {\n      type: Boolean,\n      default: false,\n    },\n  },\n}\n","import { render, staticRenderFns } from \"./ToolbarButton.vue?vue&type=template&id=5dedde00&scoped=true&\"\nimport script from \"./ToolbarButton.vue?vue&type=script&lang=js&\"\nexport * from \"./ToolbarButton.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ToolbarButton.vue?vue&type=style&index=0&id=5dedde00&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5dedde00\",\n  null\n  \n)\n\nexport default component.exports\n\n/* nuxt-component-imports */\ninstallComponents(component, {SBtn: require('/app/frontend/components/S/Btn.vue').default,STooltip: require('/app/frontend/components/S/Tooltip.vue').default})\n","export * from \"-!../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--7-oneOf-1-3!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=style&index=0&id=0eb62b93&prod&lang=scss&scoped=true&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toolbar[data-v-0eb62b93]{background-color:inherit!important}.separator[data-v-0eb62b93]{display:inline-block;height:1.5em;width:0;border-left:1px solid #d9d9d9;border-right:1px solid #fff;color:transparent;text-indent:-10px;margin:0 .5em}\", \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","\nimport { undo, redo, undoDepth, redoDepth } from '@codemirror/commands';\nimport { isTypeInSelection, toggleStrong, toggleEmphasis, toggleStrikethrough, toggleListUnordered, toggleListOrdered, toggleLink, insertCodeBlock, insertTable } from 'reportcreator-markdown/editor/commands.js';\n\nexport default {\n  props: {\n    editorView: {\n      type: Object,\n      required: true,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    uploadFiles: {\n      type: Function,\n      default: null\n    },\n    fileUploadInProgress: {\n      type: Boolean,\n      default: false\n    },\n    lang: {\n      type: String,\n      default: null,\n    },\n  },\n  computed: {\n    editorMode: {\n      get() {\n        return this.$store.state.settings.markdownEditorMode;\n      },\n      set(val) {\n        this.$store.commit('settings/updateMarkdownEditorMode', val);\n      },\n    },\n    spellcheckSupported() {\n      return this.$store.getters['apisettings/settings'].features.spellcheck &&\n             this.$store.getters['apisettings/settings'].languages.find(l => l.code === this.lang)?.spellcheck;\n    },\n    spellcheckEnabled: {\n      get() {\n        return this.$store.state.settings.spellcheckEnabled && this.spellcheckSupported;\n      },\n      set(val) {\n        this.$store.commit('settings/updateSpellcheckEnabled', val);\n      }\n    },\n    canUndo() {\n      if (this.editorView) {\n        return undoDepth(this.editorView.state);\n      }\n      return false;\n    },\n    canRedo() {\n      if (this.editorView) {\n        return redoDepth(this.editorView.state);\n      }\n      return false;\n    },\n  },\n  methods: {\n    ...Object.fromEntries(Object.entries({\n      undo,\n      redo,\n      toggleStrong,\n      toggleEmphasis,\n      toggleStrikethrough,\n      toggleListUnordered,\n      toggleListOrdered,\n      toggleLink,\n      insertCodeBlock,\n      insertTable,\n    })\n      .map(([n, fn]) => [n, function() { \n        if (!this.editorView) {\n          return false;\n        }\n\n        try {\n          return fn(this.editorView); \n        } catch (err) {\n          // eslint-disable-next-line no-console\n          console.error('Error in CodeMirror action', err);\n        }\n      }])),\n    isTypeInSelection(type) {\n      if (!this.editorView) {\n        return false;\n      }\n      return isTypeInSelection(this.editorView.state, type);\n    },\n    async onUploadFiles(event) {\n      const files = event.target.files;\n      try {\n        await this.uploadFiles(files);\n      } finally {\n        this.$refs.fileInput.value = null;\n      }\n    },\n  }\n}\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Toolbar.vue?vue&type=template&id=0eb62b93&scoped=true&\"\nimport script from \"./Toolbar.vue?vue&type=script&lang=js&\"\nexport * from \"./Toolbar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Toolbar.vue?vue&type=style&index=0&id=0eb62b93&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0eb62b93\",\n  null\n  \n)\n\nexport default component.exports\n\n/* nuxt-component-imports */\ninstallComponents(component, {MarkdownToolbarButton: require('/app/frontend/components/Markdown/ToolbarButton.vue').default})\n"],"sourceRoot":""}