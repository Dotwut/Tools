# Generated by Django 4.1.2 on 2022-10-27 11:17

import hashlib
from django.db import migrations, models
from reportcreator_api.pentests import cvss
from reportcreator_api.utils.utils import omit_keys


def migrate_to_encrypted(apps, schema_editor):
    PentestProject = apps.get_model('pentests', 'PentestProject')
    PentestFinding = apps.get_model('pentests', 'PentestFinding')
    ProjectType = apps.get_model('pentests', 'ProjectType')
    UploadedAsset = apps.get_model('pentests', 'UploadedAsset')
    UploadedImage = apps.get_model('pentests', 'UploadedImage')

    projects = list(PentestProject.objects.all())
    for p in projects:
        p.custom_fields_new = p.custom_fields
    PentestProject.objects.bulk_update(projects, ['custom_fields_new'])

    findings = list(PentestFinding.objects.all())
    for f in findings:
        f.template_id_new = f.template_id
        f.custom_fields_new = f.custom_fields | {
            'title': f.title,
            'cvss': f.cvss,
        }
    PentestFinding.objects.bulk_update(findings, ['custom_fields_new', 'template_id_new'])

    project_types = list(ProjectType.objects.all())
    for pt in project_types:
        pt.report_template_new = pt.report_template
        pt.report_styles_new = pt.report_styles
        pt.report_preview_data_new = pt.report_preview_data
    ProjectType.objects.bulk_update(project_types, ['report_template_new', 'report_styles_new', 'report_preview_data_new'])

    images = list(UploadedImage.objects.all())
    for i in images:
        i.name_new = i.name
        i.name_hash = hashlib.sha3_256(i.name.encode()).digest()
    UploadedImage.objects.bulk_update(images, ['name_new', 'name_hash'])

    assets = list(UploadedAsset.objects.all())
    for a in assets:
        a.name_new = a.name
        a.name_hash = hashlib.sha3_256(a.name.encode()).digest()
    UploadedAsset.objects.bulk_update(assets, ['name_new', 'name_hash'])


def reverse_migrate_from_encrypted(apps, schema_editor):
    PentestProject = apps.get_model('pentests', 'PentestProject')
    PentestFinding = apps.get_model('pentests', 'PentestFinding')
    FindingTemplate = apps.get_model('pentests', 'FindingTemplate')
    ProjectType = apps.get_model('pentests', 'ProjectType')
    UploadedAsset = apps.get_model('pentests', 'UploadedAsset')
    UploadedImage = apps.get_model('pentests', 'UploadedImage')

    projects = list(PentestProject.objects.all())
    for p in projects:
        p.custom_fields = p.custom_fields_new
    PentestProject.objects.bulk_update(projects, ['custom_fields'])

    findings = list(PentestFinding.objects.all())
    for f in findings:
        f.title = f.custom_fields_new['title']
        f.cvss = f.custom_fields_new['cvss']
        f.risk_score = cvss.calculate_score(f.cvss)
        f.risk_level = cvss.level_from_score(f.risk_score)
        f.template = FindingTemplate.objects.filter(id=f.template_id_new).first()
        f.custom_fields = omit_keys(f.custom_fields_new, ['title', 'cvss'])
    PentestFinding.objects.bulk_update(findings, ['custom_fields', 'title', 'cvss', 'risk_score', 'risk_level', 'template'])

    project_types = list(ProjectType.objects.all())
    for pt in project_types:
        pt.report_template = pt.report_template_new
        pt.report_styles = pt.report_styles_new
        pt.report_preview_data = pt.report_preview_data_new
    ProjectType.objects.bulk_update(project_types, ['report_template', 'report_styles', 'report_preview_data'])

    images = list(UploadedImage.objets.all())
    for i in images:
        i.name = i.name_new
    UploadedImage.objects.bulk_update(images, ['name'])

    assets = list(UploadedAsset.objets.all())
    for a in assets:
        a.name = a.name_new
    UploadedAsset.objects.bulk_update(assets, ['name'])


class Migration(migrations.Migration):

    dependencies = [
        ('pentests', '0025_db_encryption_1'),
    ]

    operations = [
        migrations.RunPython(code=migrate_to_encrypted, reverse_code=reverse_migrate_from_encrypted),
    ]
