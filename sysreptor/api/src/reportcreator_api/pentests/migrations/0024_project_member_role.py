# Generated by Django 4.1.3 on 2022-11-24 08:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import reportcreator_api.utils.models
import uuid

def migrate_set_roles(apps, schema_editor):
    PentestProject = apps.get_model('pentests.PentestProject')
    ProjectMemberInfo = apps.get_model('pentests.ProjectMemberInfo')
    ProjectMemberRole = apps.get_model('pentests.ProjectMemberRole')
    OldThroughModel = PentestProject.pentesters.through

    ProjectMemberRole.objects.bulk_create([
        ProjectMemberRole(role='lead', default=False),
        ProjectMemberRole(role='pentester', default=True),
        ProjectMemberRole(role='reviewer', default=False),
    ])
    default_roles = list(ProjectMemberRole.objects.filter(default=True).values_list('role', flat=True))

    member_infos = []
    for mi in OldThroughModel.objects.all():
        member_infos.append(ProjectMemberInfo(project=mi.pentestproject, user=mi.pentestuser, roles=default_roles))
    ProjectMemberInfo.objects.bulk_create(member_infos)

    projects = list(PentestProject.objects.filter(imported_members__len__gt=0).all())
    for p in projects:
        for m in p.imported_members:
            m['roles'] = default_roles
        p.save()
    PentestProject.objects.bulk_update(projects, ['imported_members'])


def reverse_migrate_set_roles(apps, schema_editor):
    PentestProject = apps.get_model('pentests.PentestProject')
    ProjectMemberInfo = apps.get_model('pentests.ProjectMemberInfo')
    OldThroughModel = PentestProject.pentesters.through
    
    old_member_infos = []
    for mi in ProjectMemberInfo.objects.all():
        old_member_infos.append(OldThroughModel(pentestproject=mi.project, pentestuser=mi.user))
    OldThroughModel.objects.bulk_create(old_member_infos)


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pentests', '0023_pentestfinding_status_reportsection_status_and_more'),
    ]

    operations = [
        migrations.RenameField(
            model_name='pentestproject',
            old_name='imported_pentesters',
            new_name='imported_members',
        ),
        migrations.CreateModel(
            name='ProjectMemberInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=reportcreator_api.utils.models.now, editable=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('roles', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='pentests.pentestproject')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('project', 'user')},
            },
            bases=(reportcreator_api.utils.models.ModelDiffMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProjectMemberRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=reportcreator_api.utils.models.now, editable=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(max_length=50, unique=True)),
                ('default', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created'],
                'abstract': False,
            },
            bases=(reportcreator_api.utils.models.ModelDiffMixin, models.Model),
        ),
        migrations.RunPython(code=migrate_set_roles, reverse_code=reverse_migrate_set_roles),
        migrations.RemoveField(
            model_name='pentestproject',
            name='pentesters',
        ),
    ]
