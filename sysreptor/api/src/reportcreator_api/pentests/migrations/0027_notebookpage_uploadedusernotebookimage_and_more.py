# Generated by Django 4.1.3 on 2023-02-07 14:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import reportcreator_api.archive.crypto.fields
import reportcreator_api.pentests.storages
import reportcreator_api.utils.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pentests', '0026_stringfield_spellcheck'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotebookPage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=reportcreator_api.utils.models.now, editable=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('note_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('title', reportcreator_api.archive.crypto.fields.EncryptedField(base_field=models.TextField(default=''), editable=True)),
                ('text', reportcreator_api.archive.crypto.fields.EncryptedField(base_field=models.TextField(default=''), editable=True)),
                ('checked', models.BooleanField(blank=True, null=True)),
                ('emoji', models.CharField(blank=True, max_length=32, null=True)),
                ('order', models.PositiveIntegerField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pentests.notebookpage')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='pentests.pentestproject')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notes', to=settings.AUTH_USER_MODEL)),
            ],
            bases=(reportcreator_api.utils.models.ModelDiffMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UploadedUserNotebookImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=reportcreator_api.utils.models.now, editable=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', reportcreator_api.archive.crypto.fields.EncryptedField(base_field=models.CharField(max_length=255), editable=True)),
                ('name_hash', models.BinaryField(db_index=True, max_length=32)),
                ('file', models.ImageField(storage=reportcreator_api.pentests.storages.get_uploaded_image_storage, upload_to='')),
                ('linked_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to=settings.AUTH_USER_MODEL)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
                'abstract': False,
                'unique_together': {('linked_object', 'name_hash')},
            },
            bases=(reportcreator_api.utils.models.ModelDiffMixin, models.Model),
        ),
        migrations.AddConstraint(
            model_name='notebookpage',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('project__isnull', False), ('user__isnull', True)), models.Q(('project__isnull', True), ('user__isnull', False)), _connector='OR'), name='has_project_or_user'),
        ),
        migrations.AddConstraint(
            model_name='notebookpage',
            constraint=models.UniqueConstraint(condition=models.Q(('project__isnull', False)), fields=('project', 'note_id'), name='unique_note_id_per_project'),
        ),
        migrations.AddConstraint(
            model_name='notebookpage',
            constraint=models.UniqueConstraint(condition=models.Q(('user__isnull', False)), fields=('user', 'note_id'), name='unique_note_id_per_user'),
        ),
    ]
