from django.contrib import admin

from reportcreator_api.pentests.models import FindingTemplate, NotebookPage, PentestFinding, PentestProject, ProjectType, ReportSection, \
    UploadedImage, UploadedAsset, UploadedProjectFile, UploadedUserNotebookImage, ProjectMemberInfo, ProjectMemberRole, \
    UserPublicKey, ArchivedProject, ArchivedProjectKeyPart, ArchivedProjectPublicKeyEncryptedKeyPart
from reportcreator_api.utils.admin import BaseAdmin, admin_change_url, admin_changelist_url


@admin.register(ProjectType)
class ProjectTypeAdmin(BaseAdmin):
    def link_projects(self, obj):
        return admin_changelist_url('Projects using this ProjectType', 'pentests', 'pentestproject', {'project_type_id': obj.id})

    def link_uploaded_assets(self, obj):
        return admin_change_url('Uploaded assets', 'pentests', 'uploadedasset', {'projecttype_id': obj.id})


@admin.register(ProjectMemberRole)
class ProjectMemberRoleAdmin(BaseAdmin):
    list_display = ['role', 'default']


class ProjectMemberInfoInlineAdmin(admin.StackedInline):
    model = ProjectMemberInfo


@admin.register(PentestProject)
class PentestProjectAdmin(BaseAdmin):
    inlines = [ProjectMemberInfoInlineAdmin]

    def link_findings(self, obj):
        return admin_changelist_url('Findings of this project', 'pentests', 'pentestfinding', {'project_id': obj.id})

    def link_project_type(self, obj):
        return admin_change_url(obj.project_type.name, 'pentests', 'projecttype', obj.project_type.id)

    def link_uploaded_images(self, obj):
        return admin_changelist_url('Uploaded images', 'pentests', 'uploadedimage', {'linked_object_id': obj.id})
    
    def link_notes(self, obj):
        return admin_changelist_url('Notebook pages', 'pentests', 'notebookpage', {'project_id': obj.id})
    
    def link_uploaded_files(self, obj):
        return admin_changelist_url('Uploaded files', 'pentests', 'uploadedprojectfile', {'linked_object_id': obj.id})


@admin.register(PentestFinding)
class PentestFindingAdmin(BaseAdmin):
    def link_project(self, obj):
        return admin_change_url(obj.project.name, 'pentests', 'pentestproject', obj.project.id)


@admin.register(ReportSection)
class ReportSectionAdmin(BaseAdmin):
    def link_project(self, obj):
        return admin_change_url(obj.project.name, 'pentests', 'pentestproject', obj.project.id)


@admin.register(NotebookPage)
class NotebookPageAdmin(BaseAdmin):
    def link_project(self, obj):
        return admin_change_url(obj.project.name, 'pentests', 'pentestproject', obj.project.id)

    def link_user(self, obj):
        return admin_change_url(obj.user.name, 'users', 'pentestuser', obj.user.id)


@admin.register(FindingTemplate)
class FindingTemplateAdmin(BaseAdmin):
    pass


@admin.register(UploadedImage)
class UploadedImageAdmin(BaseAdmin):
    def link_project(self, obj):
        return admin_change_url(obj.linked_object.name, 'pentests', 'pentestproject', obj.linked_object.id)


@admin.register(UploadedAsset)
class UploadedAssetAdmin(BaseAdmin):
    def link_project_type(self, obj):
        return admin_change_url(obj.linked_object.name, 'pentests', 'projecttype', obj.linked_object.id)


@admin.register(UploadedUserNotebookImage)
class UploadedUserNotebookImageAdmin(BaseAdmin):
    def link_user(self, obj):
        return admin_change_url(obj.linked_object.name, 'users', 'pentestuser', obj.linked_object.id)


@admin.register(UploadedProjectFile)
class UploadedProjectFileAdmin(BaseAdmin):
    def link_project(self, obj):
        return admin_change_url(obj.linked_object.name, 'pentests', 'pentestproject', obj.linked_object.id)


@admin.register(UserPublicKey)
class UserPublicKeyAdmin(BaseAdmin):
    def link_user(self, obj):
        return admin_change_url(obj.user.username, 'users', 'pentestuser', obj.user.id)
    
    def link_encrypted_key_parts(self, obj):
        return admin_changelist_url('ArchivedProjectPublicKeyEncryptedKeyPart encrypted with this public key', 'pentests', 'archivedprojectpublickeyencryptedkeypart', {'public_key_id': obj.id})


@admin.register(ArchivedProject)
class ArchivedProjectAdmin(BaseAdmin):
    def link_key_parts(self, obj):
        return admin_changelist_url('key parts', 'pentests', 'archivedprojectkeypart', {'archived_project_id': obj.id})
    

@admin.register(ArchivedProjectKeyPart)
class ArchivedProjectKeyPartAdmin(BaseAdmin):
    def link_user(self, obj):
        return admin_change_url(obj.user.username, 'users', 'pentestuser', obj.user.id)
    
    def link_archive(self, obj):
        return admin_change_url(obj.archived_project.name, 'pentests', 'archivedproject', obj.archived_project.id)

    def link_encrypted_key_parts(self, obj):
        return admin_changelist_url('Encrypted key part data', 'pentests', 'archivedprojectpublickeyencryptedkeypart', {'key_part_id': obj.id})


@admin.register(ArchivedProjectPublicKeyEncryptedKeyPart)
class ArchivedProjectPublicKeyEncryptedKeyPartAdmin(BaseAdmin):
    def link_key_part(self, obj):
        return admin_change_url('Archive key part', 'pentests', 'archivedprojectkeypart', obj.key_part.id)

    def link_public_key(self, obj):
        return admin_change_url(obj.public_key.name, 'pentests', 'userpublickey', obj.public_key.id)

